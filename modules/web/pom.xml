<?xml version="1.0" encoding="UTF-8"?>

<project>
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.geronimo.samples.daytrader</groupId>
    <artifactId>daytrader</artifactId>
    <version>1.1-SNAPSHOT</version>
  </parent>
  <artifactId>daytrader-web</artifactId>
  <name>DayTrader :: Web Application</name>
  <packaging>war</packaging>
  <description>Daytrader Web</description>
  <dependencies>
    <dependency>
      <groupId>org.apache.geronimo.samples.daytrader</groupId>
      <artifactId>daytrader-ejb</artifactId>
      <version>1.1-SNAPSHOT</version>
      <!-- Caveat: it should be ejb-client but the daytrader build is not quite perfect yet... -->
      <type>ejb</type>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-j2ee_1.4_spec</artifactId>
      <version>1.0</version>
      <!-- Caveat: Issue with the Jetty6 plugin not including provided scope. This is because Maven does
           not seem to pass provided scope deps. To make the in-place deployment work the scope has to be
           compile -->
      <!--scope>compile</scope-->
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty6-plugin</artifactId>
        <configuration>
          <scanIntervalSeconds>10</scanIntervalSeconds>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <configuration>
          <container>
            <containerId>tomcat5x</containerId>
            <zipUrlInstaller>
              <url>http://www.apache.org/dist/jakarta/tomcat-5/v5.0.30/bin/jakarta-tomcat-5.0.30.zip</url>
              <installDir>${java.io.tmpdir}/cargo-installs</installDir>
            </zipUrlInstaller>
          </container>
          <configuration>
            <dir>${project.build.directory}/tomcat</dir>
          </configuration>
        </configuration>
        <!-- Configuration to use when Tomcat is already installed on your machine
        <configuration>
          <container>
            <containerId>tomcat5x</containerId>
            <home>c:/apps/jakarta-tomcat-5.0.30</home>
          </container>
          <configuration>
            <dir>${project.build.directory}/tomcat</dir>
          </configuration>
        </configuration>
        -->
        <!-- Configuration to do hot deployment to a running Tomcat container
        <configuration>
          <container>
            <containerId>tomcat5x</containerId>
            <type>remote</type>
          </container>
          <configuration>
            <type>runtime</type>
            <properties>
              <cargo.remote.username>username</cargo.remote.username>
              <cargo.remote.password>password</cargo.remote.password>
            </properties>
          </configuration>
        </configuration>
        -->
        <!-- Configuration to use when doing a local deployment
        <configuration>
          <container>
            <containerId>tomcat5x</containerId>
            <home>c:/apps/jakarta-tomcat-5.0.30</home>
          </container>
          <configuration>
            <type>existing</type>
            <dir>c:/apps/jakarta-tomcat-5.0.30</dir>
          </configuration>
        </configuration>
        -->
      </plugin>
      <!-- Test for doing in-place development with Cargo and Jetty
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <configuration>
          <container>
            <log>container.log</log>
            <dependencies>
              <dependency>
                <location>${project.build.outputDirectory}</location>
              </dependency>
              <dependency>
                <groupId>org.apache.geronimo.samples.daytrader</groupId>
                <artifactId>daytrader-ejb</artifactId>
                <type>ejb</type>
              </dependency>
              <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-j2ee_1.4_spec</artifactId>
              </dependency>
            </dependencies>
          </container>
          <configuration>
            <dir>${project.build.directory}/tomcat</dir>            
            <deployables>
              <deployable>
                <location>${basedir}/src/main/webapp</location>
              </deployable>
            </deployables>
          </configuration>
        </configuration>
      </plugin>
      -->
    </plugins>
  </build>
</project>
